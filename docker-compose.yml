version: '3.5'
services:
  mysql56:
    container_name: mysql
    image: 'mysql:5.6'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  gitlab:
    container_name: gitlab
    image: 'gitlab/gitlab-ce:12.1.6-ce.0'
    ports:
      - '3080:80'
      - '3443:443'
      - '3022:22'
    networks:
      local:
        aliases:
          - gitlab.lo
    labels:
      - "traefik.enable=true"
      - "traefik.backend=gitlab"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:gitlab.lo"
      - "traefik.port=80"
    volumes:
      - '${GITLAB_DATA}/configs:/etc/gitlab'
      - '${GITLAB_DATA}/logs:/var/log/gitlab'
      - '${GITLAB_DATA}/data:/var/opt/gitlab'

  registry:
    container_name: registry
    image: 'registry:2'
    ports:
      - '5000:443'
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.co.pem
      REGISTRY_HTTP_TLS_KEY: /certs/registry.co-key.pem
    volumes:
      - $PWD/certs:/certs

  gitlab-runner-1:
    container_name: gitlab-runner-1
    image: 'gitlab/gitlab-runner:v12.1.0'
    networks:
      local:
        aliases:
          - gitlab-runner-1.lo
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${PWD}/gitlab-runner-config.toml:/etc/gitlab-runner/config.toml'

  prometheus:
    container_name: prometheus
    image: 'prom/prometheus:v2.11.2'
    ports:
      - '9090:9090'
    networks:
      local:
        aliases:
          - prometheus.lo
    volumes:
      - '${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml'
        # - '${PROMETHEUS_DATA}:/prometheus'
    labels:
      - "traefik.enable=true"
      - "traefik.backend=prometheus"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:prometheus.lo"
      - "traefik.port=9090"

  grafana:
    container_name: grafana
    image: 'grafana/grafana:6.3.0'
    ports:
      - '3000:3000'
    networks:
      local:
        aliases:
          - grafana.lo
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:grafana.lo"
      - "traefik.port=3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}

  traefik:
    container_name: traefik
    command: --loglevel=DEBUG
    image: traefik:2.2.1
    restart: always
    ports:
      - 4001:80
      - 4000:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}/config/traefik/traefik.yml:/traefik.yml
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:traefik.do"
      - "traefik.port=8080"
    networks:
      local:
        ipv4_address: 172.30.0.2

  nginx:
    build: 
      context: ./config/nginx/
    container_name: nginx
    image: jdube/nginx
    ports: 
      - 8123:80
      - 8223:443
    labels:
      # - "traefik.enable=true"
      # - "traefik.backend=nginx"
      # - "traefik.docker.network=local"
      # - "traefik.frontend.rule=Host:nginx.co"
      # - "traefik.port=80"
      - "traefik.http.routers.nginx.rule=Host(`nginx.co`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "co.elastic.metrics/module=nginx"
      - "co.elastic.metrics/metricsets=stubstatus"
      - "co.elastic.metrics/hosts=80"
      - "co.elastic.metrics/period=10s"

  nginx-secure:
    container_name: nginx-secure.co
    image: nginx
    ports: 
      - 7000:80
      - 7001:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - $PWD/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - $PWD/config/nginx/nginx-secure.co.crt:/etc/nginx/conf.d/nginx-secure.co.crt
      - $PWD/config/nginx/nginx-secure.co.key:/etc/nginx/conf.d/nginx-secure.co.key

  zipkin:
    container_name: zipkin
    image: 'openzipkin/zipkin:2.16.1'
    ports: 
      - 9411:9411
    networks:
      local:
        aliases:
          - zipkin.lo
    labels:
      - "traefik.enable=true"
      - "traefik.backend=zipkin"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:zipkin.lo"
      - "traefik.port=9411"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    networks:
      local:
        aliases:
          - elasticsearch.lo
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      discovery.type: single-node
    labels:
      - "traefik.enable=true"
      - "traefik.backend=elasticsearch"
      - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:elasticsearch.lo"
      - "traefik.port=9411"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.3.0
    ports:
      - '5601:5601'
    networks:
      local:
        aliases:
          - kibana.lo
    volumes:
      - ${PWD}/config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      SERVER_NAME: kibana.lo
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    labels:
      - "traefik.enable=true"
      - "traefik.backend=kibana"
      # - "traefik.docker.network=local"
      - "traefik.frontend.rule=Host:kibana.co"
      - "traefik.port=5601"

  metricbeat:
    container_name: metricbeat
    image: docker.elastic.co/beats/metricbeat:7.3.0
    environment:
      setup.kibana.host: kibana:5601
      # output.elasticsearch.hosts: ["elasticsearch:9200"]
    user: root
    networks:
      local:
        aliases:
          - metricbeat.lo
    volumes:
      - ${PWD}/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro 

  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.3.0
    # user: root
    command: -e -d "*"
    networks:
      local:
        aliases:
          - filebeat.lo
    volumes:
      - ${PWD}/config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /tmp/apps/logs/epay/:/data/apps/logs/epay/

  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.3.1
    command: --strict.perms=false -e 
    ports:
      - 8200:8200
    environment:
      output.elasticsearch.hosts: "http://elasticsearch:9200"
    user: apm-server
    networks:
      local:
        aliases:
          - apm-server.lo
    volumes:
      - "${PWD}/config/apm/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro"

 
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.3.1
    networks:
      local:
        aliases:
          - logstash.lo
    ports:
      - 5044:5044
      - 5045:5045
    volumes:
      - ${PWD}/config/logstash/pipeline/:/usr/share/logstash/pipeline/

  haproxy:
    container_name: haproxy
    image: haproxy:2.0
    restart: always
    labels:
      - "traefik.frontend.rule=Host:haproxy.do"
    ports:
      - 9080:80
      - 9081:443
    networks:
      local:
        ipv4_address: 172.30.0.200
    volumes:
      - ${PWD}/config/haproxy/haproxy.cfg/:/usr/local/etc/haproxy/haproxy.cfg

  nexus:
    container_name: nexus
    image: sonatype/nexus3:3.23.0
    ports:
      - 8081:8081

  youtrack:
    container_name: youtrack
    image: jetbrains/youtrack:2020.2.7479
    ports:
      - 8777:8080

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.3-management
    ports:
      - 5672:5672
      - 15672:15672

  ecs:
    container_name: ecs
    image: econet-wireless-zimbabwe/epay-config-server:0.1.0
    ports:
      - 8888:8888
    volumes:
      - /home/jdube/workspace/ewz/cloud-configuration/epay:/data/apps/config/epay
    environment:
      spring.cloud.config.server.git.uri: /data/apps/config/epay

networks:
  local:
    external: true
     
    
